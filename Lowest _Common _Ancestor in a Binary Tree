import java.util.*;
class TreeNode {
    int val;
    TreeNode left, right, parent;
    TreeNode(int x) {
        val = x;
    }
}
public class Solution {

    public TreeNode lowestCommonAncestor(TreeNode p, TreeNode q) {
        Set<TreeNode> ancestors = new HashSet<>();

        while (p != null) {
            ancestors.add(p);
            p = p.parent;
        }

        while (q != null) {
            if (ancestors.contains(q)) {
                return q;
            }
            q = q.parent;
        }

        return null; 
    }

    public static void main(String[] args) {
        Solution solution = new Solution();
       TreeNode root = new TreeNode(3);
        root.left = new TreeNode(5);
        root.left.parent = root;
        root.right = new TreeNode(1);
        root.right.parent = root;
        root.left.left = new TreeNode(6);
        root.left.left.parent = root.left;
        root.left.right = new TreeNode(2);
        root.left.right.parent = root.left;
        root.left.right.left = new TreeNode(7);
        root.left.right.left.parent = root.left.right;
        root.left.right.right = new TreeNode(4);
        root.left.right.right.parent = root.left.right;
        root.right.left = new TreeNode(0);
        root.right.left.parent = root.right;
        root.right.right = new TreeNode(8);
        root.right.right.parent = root.right;

        TreeNode p = root.left;
        TreeNode q = root.right;

        TreeNode lca = solution.lowestCommonAncestor(p, q);
        System.out.println("Lowest Common Ancestor: " + lca.val); 
    }
}
